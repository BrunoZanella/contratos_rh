"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from django.contrib import messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '567yhy567-t!ertbr#!h+cql1elql!opqk7$71gdmzz*=nzqm*zf(ac)l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    # 'contratacaodigital.brggeradores.com.br',
    'brg.datasetsolucoes.com.br', # colocar na porta 30018
    # '177.223.44.114',
]
# rodando meu server django python manage.py runserver 30018 
# http://brg.datasetsolucoes.com.br:30018/ e ele não entra


# Application definition

INSTALLED_APPS = [
    'admin_interface',
    'colorfield',
    'django.contrib.humanize',
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rh',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_bootstrap5',
    'localflavor',
    'django_extensions',
    'rest_framework',
]

X_FRAME_OPTIONS='SAMEORIGIN'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': False,  # Alterado para False
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'rh.context_processors.adicionar_variaveis_globais',  # Adicione este para usar tem_acesso_completo
            ],
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'contratacao_digital',
#         'USER': 'contratacao_digital',
#         'PASSWORD': 'brg@rh2025',
#         'HOST': 'localhost',
#         'PORT': '50479',
#         'OPTIONS': {
#             'charset': 'utf8mb4',
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
#         },
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True
USE_TZ = True


STATIC_URL = '/static/' # Ensured leading slash
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # Added STATIC_ROOT
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files (user-uploaded content)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CRISPY settings as per your snippet
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = 'tailwind'

# Login settings as per your snippet
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/login/'

# Configurações da Evolution API
EVOLUTION_API_URL = 'https://evolution.brggeradores.com.br'

EVOLUTION_API_KEY = 'DD1064B0D8E9-4E36-B766-94E5B3B7CC57'
EVOLUTION_API_INSTANCE = 'Recrutamento_RH'
APPEND_SLASH = False

# APIs de IA para análise de documentos
API_KEY_GROQ = config('API_KEY_GROQ', default='')
API_KEY_OPENAI = config('API_KEY_OPENAI', default='')


#EVOLUTION_API_KEY = '9A5DA4B016D6-4E72-81D2-A49AE5960025'
#EVOLUTION_API_INSTANCE = 'Assistencia_tecnica'


# CSRF_TRUSTED_ORIGINS = [
#     # "https://contratacaodigital.brggeradores.com.br",
# ]

# Aumentar o limite de upload de dados para o webhook
# O valor é em bytes. 20MB = 20 * 1024 * 1024
DATA_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 20 MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 100 * 1024 * 1024  # 20 MB

# Em seu settings.py
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': { # Para exibir logs no console/terminal
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
        'file': { # Para salvar logs em um arquivo
            'class': 'logging.FileHandler',
            'filename': '/home/pedro/contratos_rh/log/rh_app.log', 
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'rh': { # Logger geral para o seu app 'rh'
            'handlers': ['console', 'file'],
            'level': 'INFO', # Pode ser 'DEBUG' para mais detalhes
            'propagate': False,
        },
        'rh.tasks': { # Logger específico para o módulo de tarefas
            'handlers': ['console', 'file'],
            'level': 'DEBUG', # Defina como 'DEBUG' para ver TODAS as mensagens detalhadas
            'propagate': False,
        },
        'django': { # Logs do próprio Django
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': { # Logger padrão para tudo que não tem um logger específico
        'handlers': ['console', 'file'],
        'level': 'WARNING',
    },
}